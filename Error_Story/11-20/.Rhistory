E_deriv <- D_E(R_init, 0.667, 5.207)
E_deriv_norm <- E_deriv/sort(E_deriv)[2]
plot(E_init~R_init, type = "l", ylab = "E Sensitivity (Normalized)", xlab = "R")
plot(E_deriv_norm~R_init, type = "l", ylab = "E", xlab = "R", ylim = c(1, 10000), log = 'y')
E_deriv_df <- data.frame(R_init, E_deriv_norm)
polygon(c(subset(E_deriv_df, E_deriv_df$E_deriv_norm < 2)$R_init, .667), c(subset(E_deriv_df, E_deriv_df$E_deriv_norm < 2)$E_deriv_norm, 0), col = 'red')
# Define the Nernst function in terms of R
E_OXD <- function(e0, R, Rmin, Rmax, delta) {
return(e0 - 12.71 * log((1-OXD(R, Rmin, Rmax, delta))/OXD(R, Rmin, Rmax, delta)))
}
# Define the fraction oxidized in terms of R
OXD <- function(R, Rmin, Rmax, delta) {
return (
(R - Rmin)/((R - Rmin) + (delta*(Rmax - R)))
)
}
# Define the derivative of E
D_E <- function(R, Rmin, Rmax) {
return(
(-12.71*(Rmax-Rmin))/((R-Rmin)*(R-Rmax))
)
}
R_init <- seq(0.667, 5.207, by = 0.0001)
E_init <- E_OXD(-273, R_init, 0.667, 5.207, 0.171)
E_deriv <- D_E(R_init, 0.667, 5.207)
E_deriv_norm <- E_deriv/sort(E_deriv)[2]
plot(E_init~R_init, type = "l", ylab = "E Sensitivity (Normalized)", xlab = "R")
plot(E_deriv_norm~R_init, type = "l", ylab = "E", xlab = "R", ylim = c(1, 10000), log = 'y')
E_deriv_df <- data.frame(R_init, E_deriv_norm)
#polygon(c(subset(E_deriv_df, E_deriv_df$E_deriv_norm < 2)$R_init, .667), c(subset(E_deriv_df, #E_deriv_df$E_deriv_norm < 2)$E_deriv_norm, 0), col = 'red')
polygon(c(subset(E_deriv_df, E_deriv_df$E_deriv_norm < 2)$R_init, .667), c(subset(E_deriv_df, E_deriv_df$E_deriv_norm < 2)$E_deriv_norm, 0), col = 'red')
polygon(c(subset(E_deriv_df, E_deriv_df$E_deriv_norm < 2)$R_init, .667), c(0, subset(E_deriv_df, E_deriv_df$E_deriv_norm < 2)$E_deriv_norm, 0), col = 'red')
polygon(c(2, subset(E_deriv_df, E_deriv_df$E_deriv_norm < 2)$R_init, .667), c(0, subset(E_deriv_df, E_deriv_df$E_deriv_norm < 2)$E_deriv_norm, 0), col = 'red')
R_init <- seq(0.667, 5.207, by = 0.0001)
E_init <- E_OXD(-273, R_init, 0.667, 5.207, 0.171)
E_deriv <- D_E(R_init, 0.667, 5.207)
E_deriv_norm <- E_deriv/sort(E_deriv)[2]
plot(E_init~R_init, type = "l", ylab = "E Sensitivity (Normalized)", xlab = "R")
plot(E_deriv_norm~R_init, type = "l", ylab = "E", xlab = "R", ylim = c(1, 10000), log = 'y')
E_deriv_df <- data.frame(R_init, E_deriv_norm)
E_deriv_2_x <- subset(E_deriv_df, E_deriv_df$E_deriv_norm < 2)$R_init
E_deriv_2_y <- subset(E_deriv_df, E_deriv_df$E_deriv_norm < 2)$E_deriv_norm
polygon(E_deriv_2_x, c(0, E_deriv_2_y[2:(len(E_deriv_2_y)-1), 0]), col = 'red')
polygon(E_deriv_2_x, c(0, E_deriv_2_y[2:(length(E_deriv_2_y)-1), 0]), col = 'red')
length(E_deriv_2_x)
length(E_deriv_2_y)
polygon(E_deriv_2_x, c(0, E_deriv_2_y[2:(length(E_deriv_2_y)-1)], 0), col = 'red')
E_deriv_2_x[-1]
tail(E_deriv_2_x,1)
R_init <- seq(0.667, 5.207, by = 0.0001)
E_init <- E_OXD(-273, R_init, 0.667, 5.207, 0.171)
E_deriv <- D_E(R_init, 0.667, 5.207)
E_deriv_norm <- E_deriv/sort(E_deriv)[2]
plot(E_init~R_init, type = "l", ylab = "E Sensitivity (Normalized)", xlab = "R")
plot(E_deriv_norm~R_init, type = "l", ylab = "E", xlab = "R", ylim = c(1, 10000), log = 'y')
E_deriv_df <- data.frame(R_init, E_deriv_norm)
E_deriv_2_x <- subset(E_deriv_df, E_deriv_df$E_deriv_norm < 2)$R_init
E_deriv_2_y <- subset(E_deriv_df, E_deriv_df$E_deriv_norm < 2)$E_deriv_norm
polygon(c(E_deriv_2_x, tail(E_deriv_2_x,1)), c(E_deriv_2_y, 0), col = 'red')
R_init <- seq(0.667, 5.207, by = 0.0001)
E_init <- E_OXD(-273, R_init, 0.667, 5.207, 0.171)
E_deriv <- D_E(R_init, 0.667, 5.207)
E_deriv_norm <- E_deriv/sort(E_deriv)[2]
plot(E_init~R_init, type = "l", ylab = "E Sensitivity (Normalized)", xlab = "R")
plot(E_deriv_norm~R_init, type = "l", ylab = "E", xlab = "R", ylim = c(1, 10000), log = 'y')
E_deriv_df <- data.frame(R_init, E_deriv_norm)
E_deriv_2_x <- subset(E_deriv_df, E_deriv_df$E_deriv_norm < 2)$R_init
E_deriv_2_y <- subset(E_deriv_df, E_deriv_df$E_deriv_norm < 2)$E_deriv_norm
polygon(c(head(E_deriv_2_x,1), E_deriv_2_x, tail(E_deriv_2_x,1)), c(0, E_deriv_2_y, 0), col = 'red')
R_init <- seq(0.667, 5.207, by = 0.0001)
E_init <- E_OXD(-273, R_init, 0.667, 5.207, 0.171)
E_deriv <- D_E(R_init, 0.667, 5.207)
E_deriv_norm <- E_deriv/sort(E_deriv)[2]
plot(E_init~R_init, type = "l", ylab = "E Sensitivity (Normalized)", xlab = "R")
plot(E_deriv_norm~R_init, type = "l", ylab = "E", xlab = "R", ylim = c(1, 10000), log = 'y')
E_deriv_df <- data.frame(R_init, E_deriv_norm)
E_deriv_2_x <- subset(E_deriv_df, E_deriv_df$E_deriv_norm < 2)$R_init
E_deriv_2_y <- subset(E_deriv_df, E_deriv_df$E_deriv_norm < 2)$E_deriv_norm
polygon(c(head(E_deriv_2_x,1), E_deriv_2_x, tail(E_deriv_2_x,1)), c(0.0001, E_deriv_2_y, 0.0001), col = 'red')
tail(E_deriv_2_x,5)
tail(E_deriv_2_x,1)
plot(E_init~R_init, type = "l", ylab = "E Sensitivity (Normalized)", xlab = "R")
plot(E_deriv_norm~R_init, type = "l", ylab = "E", xlab = "R", ylim = c(1, 10000), log = 'y')
E_deriv_df <- data.frame(R_init, E_deriv_norm)
E_deriv_2_x <- subset(E_deriv_df, E_deriv_df$E_deriv_norm < 2)$R_init
E_deriv_2_y <- subset(E_deriv_df, E_deriv_df$E_deriv_norm < 2)$E_deriv_norm
polygon(c(head(E_deriv_2_x,1), E_deriv_2_x, 4.2), c(0.01, E_deriv_2_y, 0.01), col = 'red')
polygon(c(head(E_deriv_2_x,1), E_deriv_2_x, 6), c(0.01, E_deriv_2_y, 0.01), col = 'red')
plot(E_deriv_norm~R_init, type = "l", ylab = "E", xlab = "R", ylim = c(1, 10000), log = 'y')
E_deriv_df <- data.frame(R_init, E_deriv_norm)
E_deriv_2_x <- subset(E_deriv_df, E_deriv_df$E_deriv_norm < 2)$R_init
E_deriv_2_y <- subset(E_deriv_df, E_deriv_df$E_deriv_norm < 2)$E_deriv_norm
polygon(c(head(E_deriv_2_x,1), E_deriv_2_x, 6), c(0.01, E_deriv_2_y, 0.01), col = 'red')
polygon(c(E_deriv_2_x), c(E_deriv_2_y), col = 'red')
head(E_deriv_2_x, 1)
tail(E_deriv_2_x, 1)
E_deriv_2_x <- subset(E_deriv_df, E_deriv_df$E_deriv_norm < 1)$R_init
E_deriv_2_y <- subset(E_deriv_df, E_deriv_df$E_deriv_norm < 1)$E_deriv_norm
tail(E_deriv_2_x, 1)
tail(E_deriv_2_x, 1)
head(E_deriv_2_x, 1)
E_deriv_df$E_deriv_norm
R_init
E_deriv_df
plot(E_deriv_df$E_deriv_norm~E_deriv_df$R_init)
plot(E_deriv_df$E_deriv_norm~E_deriv_df$R_init, type = "l")
subset(R_init, E_deriv_norm < 2)
subset(R_init, E_deriv_norm < 1000)
length(subset(R_init, E_deriv_norm < 1000))
length(subset(R_init, E_deriv_norm < 1))
length(subset(R_init, E_deriv_norm < 5))
length(subset(R_init, E_deriv_norm < 2))
length(subset(R_init, E_deriv_norm < 1))
length(subset(R_init, E_deriv_norm < 1.5))
summary(E_deriv_norm)
length(subset(R_init, E_deriv_norm < 1.333))
plot(E_deriv_norm~R_init, type = "l", ylab = "E", xlab = "R", ylim = c(1, 10000), log = 'y')
E_deriv_2_x <- subset(R_init, E_deriv_norm < 1.5)
E_deriv_2_y <- subset(E_deriv_norm , E_deriv_norm < 1.5)
polygon(c(head(E_deriv_2_x,1), E_deriv_2_x, 6), c(0.01, E_deriv_2_y, 0.01), col = 'red')
tail(E_deriv_2_x)
plot(E_deriv_norm~R_init, type = "l", ylab = "E", xlab = "R", ylim = c(1, 10000), log = 'y')
E_deriv_2_x <- subset(R_init, E_deriv_norm < 1.5)
E_deriv_2_y <- subset(E_deriv_norm , E_deriv_norm < 1.5)
polygon(c(head(E_deriv_2_x,1), tail(E_deriv_2_x, 2)[1]), c(0.01, E_deriv_2_y, 0.01), col = 'red')
polygon(c(head(E_deriv_2_x,1),E_deriv_2_x, tail(E_deriv_2_x, 2)[1]), c(0.01, E_deriv_2_y, 0.01), col = 'red')
tail(E_deriv_2_x, 2)[1]
tail(c(head(E_deriv_2_x,1),E_deriv_2_x, tail(E_deriv_2_x, 2)[1]))
tail(c(0.01, E_deriv_2_y, 0.01))
# Define the Nernst function in terms of R
E_OXD <- function(e0, R, Rmin, Rmax, delta) {
return(e0 - 12.71 * log((1-OXD(R, Rmin, Rmax, delta))/OXD(R, Rmin, Rmax, delta)))
}
# Define the fraction oxidized in terms of R
OXD <- function(R, Rmin, Rmax, delta) {
return (
(R - Rmin)/((R - Rmin) + (delta*(Rmax - R)))
)
}
# Define the derivative of E
D_E <- function(R, Rmin, Rmax) {
return(
(-12.71*(Rmax-Rmin))/((R-Rmin)*(R-Rmax))
)
}
R_init <- seq(0.667, 5.207, by = 0.0001)
E_init <- E_OXD(-273, R_init, 0.667, 5.207, 0.171)
E_deriv <- D_E(R_init, 0.667, 5.207)
E_deriv_norm <- subset(E_deriv/sort(E_deriv)[2], E_deriv/sort(E_deriv)[2] > -Inf & E_deriv/sort(E_deriv)[2] < Inf)
plot(E_init~R_init, type = "l", ylab = "E Sensitivity (Normalized)", xlab = "R")
plot(E_deriv_norm~R_init, type = "l", ylab = "E", xlab = "R", ylim = c(1, 10000), log = 'y')
E_deriv_2_x <- subset(R_init, E_deriv_norm < 1.5)
E_deriv_2_y <- subset(E_deriv_norm , E_deriv_norm < 1.5)
polygon(c(head(E_deriv_2_x,1),E_deriv_2_x, tail(E_deriv_2_x, 2)[1]), c(0.01, E_deriv_2_y, 0.01), col = 'red')
E_deriv_norm <- subset(E_deriv/sort(E_deriv)[2], E_deriv/sort(E_deriv)[2] > -Inf & E_deriv/sort(E_deriv)[2] < Inf)
plot(E_init~R_init, type = "l", ylab = "E Sensitivity (Normalized)", xlab = "R")
plot(E_deriv_norm~R_init, type = "l", ylab = "E", xlab = "R", ylim = c(1, 10000), log = 'y')
plot(E_init~R_init, type = "l", ylab = "E Sensitivity (Normalized)", xlab = "R")
plot(E_deriv_norm~R_init, type = "l", ylab = "E", xlab = "R", ylim = c(1, 10000), log = 'y')
length(R_deriv_norm)
length(E_deriv_norm)
length(R_init)
R_init <- seq(0.667, 5.207, by = 0.0001)
E_init <- E_OXD(-273, R_init, 0.667, 5.207, 0.171)
E_deriv <- D_E(R_init, 0.667, 5.207)
E_deriv_norm <- subset(E_deriv/sort(E_deriv)[2], E_deriv/sort(E_deriv)[2] > -Inf & E_deriv/sort(E_deriv)[2] < Inf)
R_init <- subset(R_init, E_deriv/sort(E_deriv)[2] > -Inf & E_deriv/sort(E_deriv)[2] < Inf)
plot(E_init~R_init, type = "l", ylab = "E Sensitivity (Normalized)", xlab = "R")
plot(E_init~R_init, type = "l", ylab = "E Sensitivity (Normalized)", xlab = "R")
plot(E_deriv_norm~R_init_s, type = "l", ylab = "E", xlab = "R", ylim = c(1, 10000), log = 'y')
E_deriv_2_x <- subset(R_init_s, E_deriv_norm < 1.5)
R_init <- seq(0.667, 5.207, by = 0.0001)
E_init <- E_OXD(-273, R_init, 0.667, 5.207, 0.171)
E_deriv <- D_E(R_init, 0.667, 5.207)
E_deriv_norm <- subset(E_deriv/sort(E_deriv)[2], E_deriv/sort(E_deriv)[2] > -Inf & E_deriv/sort(E_deriv)[2] < Inf)
R_init_s <- subset(R_init, E_deriv/sort(E_deriv)[2] > -Inf & E_deriv/sort(E_deriv)[2] < Inf)
plot(E_init~R_init, type = "l", ylab = "E Sensitivity (Normalized)", xlab = "R")
plot(E_deriv_norm~R_init_s, type = "l", ylab = "E", xlab = "R", ylim = c(1, 10000), log = 'y')
E_deriv_2_x <- subset(R_init_s, E_deriv_norm < 1.5)
E_deriv_2_y <- subset(E_deriv_norm , E_deriv_norm < 1.5)
polygon(c(head(E_deriv_2_x,1),E_deriv_2_x, tail(E_deriv_2_x, 2)[1]), c(0.01, E_deriv_2_y, 0.01), col = 'red')
# Define the Nernst function in terms of R
E_OXD <- function(e0, R, Rmin, Rmax, delta) {
return(e0 - 12.71 * log((1-OXD(R, Rmin, Rmax, delta))/OXD(R, Rmin, Rmax, delta)))
}
# Define the fraction oxidized in terms of R
OXD <- function(R, Rmin, Rmax, delta) {
return (
(R - Rmin)/((R - Rmin) + (delta*(Rmax - R)))
)
}
# Define the derivative of E
D_E <- function(R, Rmin, Rmax) {
return(
(-12.71*(Rmax-Rmin))/((R-Rmin)*(R-Rmax))
)
}
R_init <- seq(0.667, 5.207, by = 0.0001)
E_init <- E_OXD(-273, R_init, 0.667, 5.207, 0.171)
E_deriv <- D_E(R_init, 0.667, 5.207)
E_deriv_norm <- subset(E_deriv/sort(E_deriv)[2], E_deriv/sort(E_deriv)[2] > -Inf & E_deriv/sort(E_deriv)[2] < Inf)
R_init_s <- subset(R_init, E_deriv/sort(E_deriv)[2] > -Inf & E_deriv/sort(E_deriv)[2] < Inf)
plot(E_init~R_init, type = "l", ylab = "E Sensitivity (Normalized)", xlab = "R")
plot(E_deriv_norm~R_init_s, type = "l", ylab = "E", xlab = "R", ylim = c(1, 10000), log = 'y')
E_deriv_2_x <- subset(R_init_s, E_deriv_norm < 1.5)
E_deriv_2_y <- subset(E_deriv_norm , E_deriv_norm < 1.5)
# Buffering zone
polygon(c(head(E_deriv_2_x,1),E_deriv_2_x, tail(E_deriv_2_x, 2)[1]), c(0.01, E_deriv_2_y, 0.01), col = '#31a354')
# Sensitive Zone
E_deriv_sen_x <- subset(R_init_s, E_deriv_norm > 10)
E_deriv_sen_y <- subset(E_deriv_norm , E_deriv_norm > 10)
polygon(c(head(E_deriv_2_x,1),E_deriv_2_x, tail(E_deriv_2_x, 2)[1]), c(0.01, E_deriv_2_y, 0.01), col = '#e41a1c')
polygon(c(head(E_deriv_sen_x,1),E_deriv_2_x, tail(E_deriv_sen_x, 2)[1]), c(0.01, E_deriv_sen_y, 0.01), col = '#e41a1c')
polygon(c(head(E_deriv_sen_x,1),E_deriv_2_x, tail(E_deriv_sen_x, 1)), c(0.01, E_deriv_sen_y, 0.01), col = '#e41a1c')
length(c(head(E_deriv_sen_x,1),E_deriv_2_x, tail(E_deriv_sen_x, 1))
)
length( c(0.01, E_deriv_sen_y, 0.01))
length(E_deriv_sen_x)
length(E_deriv_sen_y)
# Define the Nernst function in terms of R
E_OXD <- function(e0, R, Rmin, Rmax, delta) {
return(e0 - 12.71 * log((1-OXD(R, Rmin, Rmax, delta))/OXD(R, Rmin, Rmax, delta)))
}
# Define the fraction oxidized in terms of R
OXD <- function(R, Rmin, Rmax, delta) {
return (
(R - Rmin)/((R - Rmin) + (delta*(Rmax - R)))
)
}
# Define the derivative of E
D_E <- function(R, Rmin, Rmax) {
return(
(-12.71*(Rmax-Rmin))/((R-Rmin)*(R-Rmax))
)
}
R_init <- seq(0.667, 5.207, by = 0.0001)
E_init <- E_OXD(-273, R_init, 0.667, 5.207, 0.171)
E_deriv <- D_E(R_init, 0.667, 5.207)
E_deriv_norm <- subset(E_deriv/sort(E_deriv)[2], E_deriv/sort(E_deriv)[2] > -Inf & E_deriv/sort(E_deriv)[2] < Inf)
R_init_s <- subset(R_init, E_deriv/sort(E_deriv)[2] > -Inf & E_deriv/sort(E_deriv)[2] < Inf)
plot(E_init~R_init, type = "l", ylab = "E Sensitivity (Normalized)", xlab = "R")
plot(E_deriv_norm~R_init_s, type = "l", ylab = "E", xlab = "R", ylim = c(1, 10000), log = 'y')
E_deriv_2_x <- subset(R_init_s, E_deriv_norm < 1.5)
E_deriv_2_y <- subset(E_deriv_norm , E_deriv_norm < 1.5)
# Buffering zone
polygon(c(head(E_deriv_2_x,1),E_deriv_2_x, tail(E_deriv_2_x, 2)[1]), c(0.01, E_deriv_2_y, 0.01), col = '#31a354')
# Sensitive Zone
E_deriv_sen_x <- subset(R_init_s, E_deriv_norm > 10)
E_deriv_sen_y <- subset(E_deriv_norm , E_deriv_norm > 10)
polygon(c(head(E_deriv_sen_x,1),E_deriv_sen_x, tail(E_deriv_sen_x, 1)), c(0.01, E_deriv_sen_y, 0.01), col = '#e41a1c')
E_deriv_sen_x <- subset(R_init_s, E_deriv_norm > 10 & R_init < 2)
E_deriv_sen_y <- subset(E_deriv_norm , E_deriv_norm > 10 & R_init < 2)
R_init <- seq(0.667, 5.207, by = 0.0001)
E_init <- E_OXD(-273, R_init, 0.667, 5.207, 0.171)
E_deriv <- D_E(R_init, 0.667, 5.207)
E_deriv_norm <- subset(E_deriv/sort(E_deriv)[2], E_deriv/sort(E_deriv)[2] > -Inf & E_deriv/sort(E_deriv)[2] < Inf)
R_init_s <- subset(R_init, E_deriv/sort(E_deriv)[2] > -Inf & E_deriv/sort(E_deriv)[2] < Inf)
plot(E_init~R_init, type = "l", ylab = "E Sensitivity (Normalized)", xlab = "R")
plot(E_deriv_norm~R_init_s, type = "l", ylab = "E", xlab = "R", ylim = c(1, 10000), log = 'y')
E_deriv_2_x <- subset(R_init_s, E_deriv_norm < 1.5)
E_deriv_2_y <- subset(E_deriv_norm , E_deriv_norm < 1.5)
polygon(c(head(E_deriv_2_x,1),E_deriv_2_x, tail(E_deriv_2_x, 2)[1]), c(0.01, E_deriv_2_y, 0.01), col = '#31a354')
E_deriv_sen_x <- subset(R_init_s, E_deriv_norm > 10 & R_init < 2)
E_deriv_sen_y <- subset(E_deriv_norm , E_deriv_norm > 10 & R_init < 2)
polygon(c(head(E_deriv_sen_x,1),E_deriv_sen_x, tail(E_deriv_sen_x, 1)), c(0.01, E_deriv_sen_y, 0.01), col = '#e41a1c')
R_init <- seq(0.667, 5.207, by = 0.0001)
E_init <- E_OXD(-273, R_init, 0.667, 5.207, 0.171)
E_deriv <- D_E(R_init, 0.667, 5.207)
E_deriv_norm <- subset(E_deriv/sort(E_deriv)[2], E_deriv/sort(E_deriv)[2] > -Inf & E_deriv/sort(E_deriv)[2] < Inf)
R_init_s <- subset(R_init, E_deriv/sort(E_deriv)[2] > -Inf & E_deriv/sort(E_deriv)[2] < Inf)
plot(E_init~R_init, type = "l", ylab = "E Sensitivity (Normalized)", xlab = "R")
plot(E_deriv_norm~R_init_s, type = "l", ylab = "E", xlab = "R", ylim = c(1, 10000), log = 'y')
E_deriv_2_x <- subset(R_init_s, E_deriv_norm < 1.5)
E_deriv_2_y <- subset(E_deriv_norm , E_deriv_norm < 1.5)
polygon(c(head(E_deriv_2_x,1),E_deriv_2_x, tail(E_deriv_2_x, 2)[1]), c(0.01, E_deriv_2_y, 0.01), col = '#68d187')
E_deriv_sen_x <- subset(R_init_s, E_deriv_norm > 10 & R_init < 2)
E_deriv_sen_y <- subset(E_deriv_norm , E_deriv_norm > 10 & R_init < 2)
polygon(c(head(E_deriv_sen_x,1),E_deriv_sen_x, tail(E_deriv_sen_x, 1)), c(0.01, E_deriv_sen_y, 0.01), col = '#f26a6a')
# Define the Nernst function in terms of R
E_OXD <- function(e0, R, Rmin, Rmax, delta) {
return(e0 - 12.71 * log((1-OXD(R, Rmin, Rmax, delta))/OXD(R, Rmin, Rmax, delta)))
}
# Define the fraction oxidized in terms of R
OXD <- function(R, Rmin, Rmax, delta) {
return (
(R - Rmin)/((R - Rmin) + (delta*(Rmax - R)))
)
}
# Define the derivative of E
D_E <- function(R, Rmin, Rmax) {
return(
(-12.71*(Rmax-Rmin))/((R-Rmin)*(R-Rmax))
)
}
R_init <- seq(0.667, 5.207, by = 0.0001)
E_init <- E_OXD(-273, R_init, 0.667, 5.207, 0.171)
E_deriv <- D_E(R_init, 0.667, 5.207)
E_deriv_norm <- subset(E_deriv/sort(E_deriv)[2], E_deriv/sort(E_deriv)[2] > -Inf & E_deriv/sort(E_deriv)[2] < Inf)
R_init_s <- subset(R_init, E_deriv/sort(E_deriv)[2] > -Inf & E_deriv/sort(E_deriv)[2] < Inf)
plot(E_init~R_init, type = "l", ylab = "E Sensitivity (Normalized)", xlab = "R")
plot(E_deriv_norm~R_init_s, type = "l", ylab = "E", xlab = "R", ylim = c(1, 10000), log = 'y')
E_deriv_2_x <- subset(R_init_s, E_deriv_norm < 1.5)
E_deriv_2_y <- subset(E_deriv_norm , E_deriv_norm < 1.5)
# Buffering zone
polygon(c(head(E_deriv_2_x,1),E_deriv_2_x, tail(E_deriv_2_x, 2)[1]), c(0.01, E_deriv_2_y, 0.01), col = '#68d187')
# Sensitive Zone
E_deriv_sen_x <- subset(R_init_s, E_deriv_norm > 10 & R_init < 2)
E_deriv_sen_y <- subset(E_deriv_norm , E_deriv_norm > 10 & R_init < 2)
polygon(c(head(E_deriv_sen_x,1),E_deriv_sen_x, tail(E_deriv_sen_x, 1)), c(0.01, E_deriv_sen_y, 0.01), col = '#f26a6a')
legend("topright", title = "", inset=c(-0.3,0), xpd=TRUE, c("Buffering Zone", "Sensitive Zone"), pch = "-", lwd = 4, col = c("#68d184", "#f26a6a"))
legend("topright", inset=c(-0.3,0), xpd=TRUE, c("Buffering Zone", "Sensitive Zone"), pch = "-", lwd = 4, col = c("#68d184", "#f26a6a"))
par(pty = "s")
plot(E_OXD(-273, R_init, 0.667, 5.207, 0.171)-E_init~R_init/0.667, type = "l", ylab = expression(paste('E'['obs']-'E'['exp'], " (mV)")), xlab = "R", ylim = c(-30,30), col = "black", lwd = 2)
sequence <- seq(0.4, 2, by = 0.4)
for(pos in 1:length(sequence)) {
suppressWarnings(points(E_OXD(-273, R_init+sequence[pos], 0.667, 5.207, 0.171)-E_init~R_init/0.667, type = "l", col = fc_red[pos], lwd = 2))
suppressWarnings(points(E_OXD(-273, R_init-sequence[pos], 0.667, 5.207, 0.171)-E_init~R_init/0.667, type = "l", col = fc_blue[pos], lwd = 2))
}
legend("topright", title = expression('R'['obs']-'R'['exp']), inset=c(-0.3,0), xpd=TRUE, as.character(format(c(rev(sequence), rev(-1*sequence)), digits=1)), pch = "-", lwd = 4, col = c(rev(fc_red), rev(fc_blue)))
par(pty = "s")
plot(E_OXD(-273, R_init, 0.667, 5.207, 0.171)-E_init~R_init/0.667, type = "l", ylab = expression(paste('E'['obs']-'E'['exp'], " (mV)")), xlab = "R", ylim = c(-30,30), col = "black", lwd = 2)
plot(E_OXD(-273, R_init, 0.667, 5.207, 0.171)-E_init~(R_init/0.667), type = "l", ylab = expression(paste('E'['obs']-'E'['exp'], " (mV)")), xlab = "R", ylim = c(-30,30), col = "black", lwd = 2)
plot(E_OXD(-273, R_init, 0.667, 5.207, 0.171)-E_init~R_init type = "l", ylab = expression(paste('E'['obs']-'E'['exp'], " (mV)")), xlab = "R", ylim = c(-30,30), col = "black", lwd = 2)
par(pty = "s")
R_init_p <- R_init/0.667
plot(E_OXD(-273, R_init, 0.667, 5.207, 0.171)-E_init~R_init_p type = "l", ylab = expression(paste('E'['obs']-'E'['exp'], " (mV)")), xlab = "R", ylim = c(-30,30), col = "black", lwd = 2)
plot(E_OXD(-273, R_init, 0.667, 5.207, 0.171)-E_init~R_init_p, type = "l", ylab = expression(paste('E'['obs']-'E'['exp'], " (mV)")), xlab = "R", ylim = c(-30,30), col = "black", lwd = 2)
R_init_p <- R_init/0.667
plot(E_OXD(-273, R_init, 0.667, 5.207, 0.171)-E_init~R_init_p, type = "l", ylab = expression(paste('E'['obs']-'E'['exp'], " (mV)")), xlab = "R'", ylim = c(-30,30), col = "black", lwd = 2)
sequence <- seq(0.4, 2, by = 0.4)
for(pos in 1:length(sequence)) {
suppressWarnings(points(E_OXD(-273, R_init+sequence[pos], 0.667, 5.207, 0.171)-E_init~R_init_p/0.667, type = "l", col = fc_red[pos], lwd = 2))
suppressWarnings(points(E_OXD(-273, R_init-sequence[pos], 0.667, 5.207, 0.171)-E_init~R_init_p/0.667, type = "l", col = fc_blue[pos], lwd = 2))
}
for(pos in 1:length(sequence)) {
suppressWarnings(points(E_OXD(-273, R_init+sequence[pos], 0.667, 5.207, 0.171)-E_init~R_init/0.667, type = "l", col = fc_red[pos], lwd = 2))
suppressWarnings(points(E_OXD(-273, R_init-sequence[pos], 0.667, 5.207, 0.171)-E_init~R_init/0.667, type = "l", col = fc_blue[pos], lwd = 2))
}
for(pos in 1:length(sequence)) {
suppressWarnings(points(E_OXD(-273, R_init+sequence[pos], 0.667, 5.207, 0.171)-E_init~R_init_p, type = "l", col = fc_red[pos], lwd = 2))
suppressWarnings(points(E_OXD(-273, R_init-sequence[pos], 0.667, 5.207, 0.171)-E_init~R_init_p, type = "l", col = fc_blue[pos], lwd = 2))
}
par(pty = "s", ncol = c(1,2))
E_2_y <- subset(E_init, E_deriv_norm < 1.5)
R_init <- seq(0.667, 5.207, by = 0.0001)
E_init <- E_OXD(-273, R_init, 0.667, 5.207, 0.171)
E_deriv <- D_E(R_init, 0.667, 5.207)
E_deriv_norm <- subset(E_deriv/sort(E_deriv)[2], E_deriv/sort(E_deriv)[2] > -Inf & E_deriv/sort(E_deriv)[2] < Inf)
R_init_s <- subset(R_init, E_deriv/sort(E_deriv)[2] > -Inf & E_deriv/sort(E_deriv)[2] < Inf)
E_deriv_2_x <- subset(R_init_s, E_deriv_norm < 1.5)
E_deriv_2_y <- subset(E_deriv_norm , E_deriv_norm < 1.5)
E_2_y <- subset(E_init, E_deriv_norm < 1.5)
E_2_sen_y <- subset(E_init , E_deriv_norm > 10 & R_init_s < 2)
par(pty = "s", mfrow = c(1,2))
plot(E_init~R_init, type = "l", ylab = "E Sensitivity (Normalized)", xlab = "R")
polygon(c(head(E_deriv_2_x,1),E_deriv_2_x, tail(E_deriv_2_x, 2)[1]), c(0.01, E_2_y, 0.01), col = '#e1edc9')
polygon(c(head(E_deriv_sen_x,1),E_deriv_sen_x, tail(E_deriv_sen_x, 1)), c(0.01, E_sen_y, 0.01), col = '#EBBEC5')
par(pty = "s", mfrow = c(1,2))
plot(E_init~R_init, type = "l", ylab = "E Sensitivity (Normalized)", xlab = "R")
polygon(c(head(E_deriv_2_x,1),E_deriv_2_x, tail(E_deriv_2_x, 2)[1]), c(-500, E_2_y, -500), col = '#e1edc9')
polygon(c(head(E_deriv_sen_x,1),E_deriv_sen_x, tail(E_deriv_sen_x, 1)), c(-500, E_sen_y, -500), col = '#EBBEC5')
par(pty = "s", mfrow = c(1,2))
plot(E_init~R_init, type = "l", ylab = "E Sensitivity (Normalized)", xlab = "R")
polygon(c(head(E_deriv_2_x,1),E_deriv_2_x, tail(E_deriv_2_x, 2)[1]), c(-350, E_2_y, -350), col = '#e1edc9')
par(pty = "s", mfrow = c(1,2))
plot(E_init~R_init, type = "l", ylab = "E Sensitivity (Normalized)", xlab = "R", ylim = c(-125, -350))
plot(E_init~R_init, type = "l", ylab = "E Sensitivity (Normalized)", xlab = "R", ylim = c(-350, -125))
par(pty = "s", mfrow = c(1,2))
plot(E_init~R_init, type = "l", ylab = "E Sensitivity (Normalized)", xlab = "R", ylim = c(-350, -125))
polygon(c(head(E_deriv_2_x,1),E_deriv_2_x, tail(E_deriv_2_x, 2)[1]), c(-350, E_2_y, -350), col = '#e1edc9')
par(pty = "s", mfrow = c(1,2))
plot(E_init~R_init, type = "l", ylab = "E Sensitivity (Normalized)", xlab = "R", ylim = c(-350, -125))
polygon(c(head(E_deriv_2_x,1),E_deriv_2_x, tail(E_deriv_2_x, 2)[1]), c(-375, E_2_y, -375), col = '#e1edc9')
par(pty = "s", mfrow = c(1,2))
plot(E_init~R_init, type = "l", ylab = "E Sensitivity (Normalized)", xlab = "R", ylim = c(-350, -125))
polygon(c(head(E_deriv_2_x,1),E_deriv_2_x, tail(E_deriv_2_x, 2)[1]), c(-360, E_2_y, -360), col = '#e1edc9')
par(pty = "s", mfrow = c(1,2))
plot(E_init~R_init, type = "l", ylab = "E Sensitivity (Normalized)", xlab = "R", ylim = c(-350, -125))
polygon(c(head(E_deriv_2_x,1),E_deriv_2_x, tail(E_deriv_2_x, 2)[1]), c(-355, E_2_y, -355), col = '#e1edc9')
par(pty = "s", mfrow = c(1,2))
plot(E_init~R_init, type = "l", ylab = "E Sensitivity (Normalized)", xlab = "R", ylim = c(-350, -125))
polygon(c(head(E_deriv_2_x,1),E_deriv_2_x, tail(E_deriv_2_x, 2)[1]), c(-358, E_2_y, -358), col = '#e1edc9')
polygon(c(head(E_deriv_sen_x,1),E_deriv_sen_x, tail(E_deriv_sen_x, 1)), c(-358, E_2_sen_y, -358), col = '#EBBEC5')
polygon(c(E_deriv_sen_x), c(-358, E_2_sen_y, -358), col = '#EBBEC5')
polygon(E_deriv_sen_x, c(-358, E_2_sen_y, -358), col = '#EBBEC5')
length(E_deriv_sen_x)
length(c(-358, E_2_sen_y, -358))
polygon(c(head(E_deriv_sen_x,2),E_deriv_sen_x, tail(E_deriv_sen_x, 2)), c(-358, E_2_sen_y, -358), col = '#EBBEC5')
E_2_sen_y
summary(E_2_sen_y)
length(E_deriv_norm)
length(E_init)
E_2_sen_y <- subset(E_init[2:length(E_init)-1] , E_deriv_norm > 10 & R_init_s < 2)
summary(E_2_sen_y)
length(R_init_s)
E_deriv_norm > 10 & R_init_s < 2
E_2_sen_y <- subset(E_init[length(E_init)] , E_deriv_norm > 10 & R_init_s < 2)
par(pty = "s", mfrow = c(1,2))
plot(E_init~R_init, type = "l", ylab = "E Sensitivity (Normalized)", xlab = "R", ylim = c(-350, -125))
polygon(c(head(E_deriv_2_x,1),E_deriv_2_x, tail(E_deriv_2_x, 2)[1]), c(-358, E_2_y, -358), col = '#e1edc9')
polygon(c(head(E_deriv_sen_x,1),E_deriv_sen_x, tail(E_deriv_sen_x, 1)), c(-358, E_2_sen_y, -358), col = '#EBBEC5')
polygon(c(head(E_deriv_sen_x,1),E_deriv_sen_x, tail(E_deriv_sen_x, 1)), c(-358, E_2_sen_y, -358), col = '#EBBEC5')
plot(E_init~R_init, type = "l", ylab = "E Sensitivity (Normalized)", xlab = "R", ylim = c(-750, -125))
polygon(c(head(E_deriv_2_x,1),E_deriv_2_x, tail(E_deriv_2_x, 2)[1]), c(-358, E_2_y, -358), col = '#e1edc9')
polygon(c(head(E_deriv_sen_x,1),E_deriv_sen_x, tail(E_deriv_sen_x, 1)), c(-358, E_2_sen_y, -358), col = '#EBBEC5')
E_2_sen_y <- subset(E_init[length(E_init)] , E_deriv_norm > 10 & R_init_s < 2)
summary(E_2_sen_y)
E_sen_x <- subset(R_init, E_deriv_norm > 10 & R_init_s < 2)
E_sen_y <- subset(E_init[length(E_init)] , E_deriv_norm > 10 & R_init_s < 3)
E_sen_y <- subset(E_init[length(E_init)] , E_deriv_norm > 10 & R_init_s < 3)
summary(E_2_sen_y)
E_deriv_sen_x <- subset(R_init_s, E_deriv_norm > 10 & R_init_s < 2)
E_deriv_sen_y <- subset(E_deriv_norm , E_deriv_norm > 10 & R_init_s < 2)
E_sen_x <- subset(R_init, E_deriv_norm > 10 & R_init_s < 2)
E_sen_y <- subset(E_init[length(E_init)] , E_deriv_norm > 10 & R_init_s < 3)
summary(E_2_sen_y)
E_sen_x <- subset(R_init, E_deriv_norm > 10 & R_init_s < 4)
E_sen_y <- subset(E_init[length(E_init)] , E_deriv_norm > 10 & R_init_s < 4)
summary(E_2_sen_y)
E_sen_x <- subset(R_init, E_deriv_norm > 10 & R_init_s < 4)
E_sen_y <- subset(E_init, E_deriv_norm > 10 & R_init_s < 4)
summary(E_2_sen_y)
summary(E_sen_y)
polygon(c(head(E_sen_x,1),E_deriv_sen_x, tail(E_deriv_sen_x, 1)), c(-358, E_sen_y, -358), col = '#EBBEC5')
length(E_sen_x)
length(E_sen_y)
length(c(head(E_sen_x,1),E_deriv_sen_x, tail(E_deriv_sen_x, 1)))
polygon(c(head(E_sen_x,1),E_sen_x, tail(E_sen_x, 1)), c(-358, E_sen_y, -358), col = '#EBBEC5')
summary(E_sen_x)
E_sen_x <- subset(R_init, E_deriv_norm > 10 & R_init < 2)
E_deriv_sen_x
min(E_deriv_sen_x)
max(E_deriv_sen_x)
E_sen_x <- subset(R_init, R_init < 0.7834)
E_sen_y <- subset(E_init, R_init < 0.7834)
par(pty = "s", mfrow = c(1,2))
plot(E_init~R_init, type = "l", ylab = "E Sensitivity (Normalized)", xlab = "R", ylim = c(-750, -125))
polygon(c(head(E_deriv_2_x,1),E_deriv_2_x, tail(E_deriv_2_x, 2)[1]), c(-358, E_2_y, -358), col = '#e1edc9')
polygon(c(head(E_sen_x,1),E_sen_x, tail(E_sen_x, 1)), c(-358, E_sen_y, -358), col = '#EBBEC5')
par(pty = "s", mfrow = c(1,2))
plot(E_init~R_init, type = "l", ylab = "E Sensitivity (Normalized)", xlab = "R", ylim = c(-358, -125))
polygon(c(head(E_deriv_2_x,1),E_deriv_2_x, tail(E_deriv_2_x, 2)[1]), c(-358, E_2_y, -358), col = '#e1edc9')
polygon(c(head(E_sen_x,1),E_sen_x, tail(E_sen_x, 1)), c(-358, E_sen_y, -358), col = '#EBBEC5')
par(pty = "s", mfrow = c(1,2))
plot(E_init~R_init, type = "l", ylab = "E Sensitivity (Normalized)", xlab = "R", ylim = c(-350, -125))
polygon(c(head(E_deriv_2_x,1),E_deriv_2_x, tail(E_deriv_2_x, 2)[1]), c(-358, E_2_y, -358), col = '#e1edc9')
polygon(c(head(E_sen_x,1),E_sen_x, tail(E_sen_x, 1)), c(-358, E_sen_y, -358), col = '#EBBEC5')
legend("topright", inset=c(.18,0), xpd=TRUE, c("Buffering Zone", "Sensitive Zone"), pch = "-", lwd = 4, col = c("#e1edc9", "#EBBEC5"))
plot(E_deriv_norm~R_init_s, type = "l", ylab = "E", xlab = "R", ylim = c(1, 10000), log = 'y')
polygon(c(head(E_deriv_2_x,1),E_deriv_2_x, tail(E_deriv_2_x, 2)[1]), c(0.01, E_deriv_2_y, 0.01), col = '#e1edc9')
polygon(c(head(E_deriv_sen_x,1),E_deriv_sen_x, tail(E_deriv_sen_x, 1)), c(0.01, E_deriv_sen_y, 0.01), col = '#EBBEC5')
legend("topright", inset=c(.18,0), xpd=TRUE, c("Buffering Zone", "Sensitive Zone"), pch = "-", lwd = 4, col = c("#e1edc9", "#EBBEC5"))
setwd("C:/Users/Julian/Desktop/2018 Ubuntu Shared/GitShared/Ratiometric_Microscopy/Error_Story/11-20")
system.file("rmd/latex/default.tex", package="rmarkdown")
# Define the Nernst function in terms of R
E_OXD <- function(e0, R, Rmin, Rmax, delta) {
return(e0 - 12.71 * log((1-OXD(R, Rmin, Rmax, delta))/OXD(R, Rmin, Rmax, delta)))
}
E_OXD <- function(e0, R, Rmin, Rmax, delta) {
return(e0 - 12.71 * log((delta(Rmin-Rmax))/(R-Rmin)))
}
# Define the fraction oxidized in terms of R
OXD <- function(R, Rmin, Rmax, delta) {
return (
(R - Rmin)/((R - Rmin) + (delta*(Rmax - R)))
)
}
# Define the derivative of E
D_E <- function(R, Rmin, Rmax) {
return(
(-12.71*(Rmax-Rmin))/((R-Rmin)*(R-Rmax))
)
}
R_init <- seq(0.667, 5.207, by = 0.0001)
E_init <- E_OXD(-273, R_init, 0.667, 5.207, 0.171)
E_deriv <- D_E(R_init, 0.667, 5.207)
E_deriv_norm <- subset(E_deriv/sort(E_deriv)[2], E_deriv/sort(E_deriv)[2] > -Inf & E_deriv/sort(E_deriv)[2] < Inf)
R_init_s <- subset(R_init, E_deriv/sort(E_deriv)[2] > -Inf & E_deriv/sort(E_deriv)[2] < Inf)
E_deriv_2_x <- subset(R_init_s, E_deriv_norm < 1.5)
E_deriv_2_y <- subset(E_deriv_norm , E_deriv_norm < 1.5)
E_2_y <- subset(E_init, E_deriv_norm < 1.5)
# Sensitive Zone
E_deriv_sen_x <- subset(R_init_s, E_deriv_norm > 10 & R_init_s < 2)
E_deriv_sen_y <- subset(E_deriv_norm , E_deriv_norm > 10 & R_init_s < 2)
E_sen_x <- subset(R_init, R_init < 0.7834)
E_sen_y <- subset(E_init, R_init < 0.7834)
par(pty = "s", mfrow = c(1,2))
plot(E_init~R_init, type = "l", ylab = "E", xlab = "R", ylim = c(-350, -125), main = "Relationship between measured \n  value and biological interpretation")
polygon(c(head(E_deriv_2_x,1),E_deriv_2_x, tail(E_deriv_2_x, 2)[1]), c(-358, E_2_y, -358), col = '#e1edc9')
polygon(c(head(E_sen_x,1),E_sen_x, tail(E_sen_x, 1)), c(-358, E_sen_y, -358), col = '#EBBEC5')
legend("topright", inset=c(.18,0.05), xpd=TRUE, c("Buffering Zone", "Sensitive Zone"), pch = "-", lwd = 4, col = c("#e1edc9", "#EBBEC5"))
plot(E_deriv_norm~R_init_s, type = "l", ylab = "E Sensitivity (Normalized)", xlab = "R", ylim = c(1, 10000), log = 'y', main = "Sensitivity of biological interpretation \n to change in measured value" )
polygon(c(head(E_deriv_2_x,1),E_deriv_2_x, tail(E_deriv_2_x, 2)[1]), c(0.01, E_deriv_2_y, 0.01), col = '#e1edc9')
polygon(c(head(E_deriv_sen_x,1),E_deriv_sen_x, tail(E_deriv_sen_x, 1)), c(0.01, E_deriv_sen_y, 0.01), col = '#EBBEC5')
legend("topright", inset=c(.13,0.05), xpd=TRUE, c("Buffering Zone", "Sensitive Zone"), pch = "-", lwd = 4, col = c("#e1edc9", "#EBBEC5"))
log(-5)
log(-.5)
E_OXD <- function(e0, R, Rmin, Rmax, delta) {
return(e0 - 12.71 * log((1-OXD(R, Rmin, Rmax, delta))/OXD(R, Rmin, Rmax, delta)))
}
E_OXD_2 <- function(e0, R, Rmin, Rmax, delta) {
return(e0 - 12.71 * log((-1*delta*(Rmin-Rmax))/(R-Rmin)))
}
data.frame(E_OXD(270, seq(1,5,by=.5), 1, 5, 0.1), E_OXD_2(270, seq(1,5,by=.5), 1, 5, 0.1))
E_OXD <- function(e0, R, Rmin, Rmax, delta) {
return(e0 - 12.71 * log((1-OXD(R, Rmin, Rmax, delta))/OXD(R, Rmin, Rmax, delta)))
}
E_OXD_2 <- function(e0, R, Rmin, Rmax, delta) {
return(e0 - 12.71 * log((delta*Rmax - delta*R)/(R-Rmin)))
}
data.frame(E_OXD(270, seq(1,5,by=.5), 1, 5, 0.1), E_OXD_2(270, seq(1,5,by=.5), 1, 5, 0.1))
install.packages("bookdown")
