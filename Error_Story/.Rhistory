shiny::runApp('Ratiometric_Microscopy/OxD_E_Params_Shiny')
runApp('Ratiometric_Microscopy/OxD_E_Params_Shiny')
runApp('Ratiometric_Microscopy/OxD_E_Params_Shiny')
runApp('Ratiometric_Microscopy/OxD_E_Params_Shiny')
setwd("C:/Users/Julian/Desktop/2018 Ubuntu Shared/GitShared/Ratiometric_Microscopy/Baseline Errors")
setwd("C:/Users/Julian/Desktop/2018 Ubuntu Shared/GitShared/Ratiometric_Microscopy/Error_Story")
R <- read.csv("R_vab_11_15_18.csv")
r
R
print(summary(R))
print(table(R))
R_animal1 <- subset(R, R$Strains == 1)
R_animal2 <- subset(R< R$Strains == 2)
R_animal2 <- subset(R, R$Strains == 2)
R_animal1_nomvmt <- subset(R_animal1, R_animal1$Movement == 0)
R_animal2_nomvmt <- subset(R_animal2, R_animal2$Movement == 0)
dim(R_animal1_nomvmt)
dim(R_animal2_nomvmt)
dim(R_animal1_nomvmt)[1]
dim(R_animal2_nomvmt)[1]
for (column in colnames(R_animal1_nomvmt)) {
print(se(R_animal1_nomvmt$column))
}
se <- function(x) sqrt(var(x)/length(x))
for (column in colnames(R_animal1_nomvmt)) {
print(se(R_animal1_nomvmt$column))
}
R_animal1_nomvmt[[1]]
for (i in (1:100)) {
print(se(R_animal1_nomvmt[[i]]))
}
dim(errors_animal1[[1]])
dim(R_animal1_nomvmt[[1]])
dim(R_animal1_nomvmt)
dim(R_animal1_nomvmt[1])
dim(R_animal1_nomvmt[,1])
dim(R_animal1_nomvmt[[,1]])
dim(R_animal1_nomvmt[[1]])
R_animal1_nomvmt
View(R)
View(R)
R_animal1_nomvmt[1]
for (i in (1:100) {
errors_animal1 <- c(errors_animal1, se(R_animal1_nomvmt[i]))
errors_animal2 <- c(errors_animal2, se(R_animal1_nomvmt[i]))
}
```
for (i in (1:100)) {
errors_animal1 <- c(errors_animal1, se(R_animal1_nomvmt[i]))
errors_animal2 <- c(errors_animal2, se(R_animal1_nomvmt[i]))
}
# Define standard error
se <- function(x) sqrt(var(x)/length(x))
# Initalize vector
errors_animal1 <- c()
errors_animal2 <- c()
# Loop through positions, add standard error to vector
for (i in (1:100)) {
errors_animal1 <- c(errors_animal1, se(R_animal1_nomvmt[i]))
errors_animal2 <- c(errors_animal2, se(R_animal1_nomvmt[i]))
}
errors_animal1
plot(errors_animal1 ~ 1:100)
plot(errors_animal1)
plot(1:100, errors_animal1)
points(1:100, errors_animal2)
points(1:100, errors_animal2, col = "red")
# Define standard error
se <- function(x) sqrt(var(x)/length(x))
# Initalize vector
errors_animal1 <- c()
errors_animal2 <- c()
# Loop through positions, add standard error to vector
for (i in (1:100)) {
errors_animal1 <- c(errors_animal1, se(R_animal1_nomvmt[i]))
errors_animal2 <- c(errors_animal2, se(R_animal2_nomvmt[i]))
}
plot(errors_animal1, col = "black", ylim = c(0, 0.2))
points(errors_animal2, col = "red")
points(errors_animal2, col = "red", pch = 19)
points(errors_animal2, col = "red", pch = 18)
points(errors_animal2, col = "red", pch = 12)
plot(errors_animal1, col = "black", ylim = c(0, 0.2), pch = 20)
points(errors_animal2, col = "red", pch = 20)
# Initalize vector
errors_animal1_all <- c()
errors_animal2_all <- c()
# Loop through positions, add standard error to vector
for (i in (1:100)) {
errors_animal1_all <- c(errors_animal1_all, se(R_animal1[i]))
errors_animal2_all <- c(errors_animal2_all, se(R_animal2[i]))
}
plot(errors_animal1_all, col = "black", ylim = c(0, 0.2), pch = 20)
points(errors_animal2_all, col = "red", pch = 20)
range(c(1,2,3))
range(c(1,2,3, 8))
range(c(1,2,3, 8))[2]
plot(errors_animal1_all, col = "black", ylim = c(0, 0.2), pch = 20)
points(errors_animal2_all, col = "red", pch = 20)
# Initalize vector
range_animal1_all <- c()
range_animal2_all <- c()
# Loop through positions, add standard error to vector
for (i in (1:100)) {
range_animal1_all <- c(range_animal1_all, range(R_animal1[i])[2])
range_animal2_all <- c(range_animal2_all, range(R_animal2[i])[2])
}
plot(range_animal1, col = "black", ylim = c(0, 0.2), pch = 20)
points(range_animal2, col = "red", pch = 20)
# Initalize vector
range_animal1_all <- c()
range_animal2_all <- c()
# Loop through positions, add standard error to vector
for (i in (1:100)) {
range_animal1_all <- c(range_animal1_all, range(R_animal1[i])[2])
range_animal2_all <- c(range_animal2_all, range(R_animal2[i])[2])
}
plot(range_animal1_all, col = "black", ylim = c(0, 0.2), pch = 20)
points(range_animal2_all, col = "red", pch = 20)
# Initalize vector
range_animal1_all <- c()
range_animal2_all <- c()
# Loop through positions, add standard error to vector
for (i in (1:100)) {
range_animal1_all <- c(range_animal1_all, range(R_animal1[i])[2])
range_animal2_all <- c(range_animal2_all, range(R_animal2[i])[2])
}
plot(range_animal1_all, col = "black", ylim = c(0, 1), pch = 20)
points(range_animal2_all, col = "red", pch = 20)
# Initalize vector
range_animal1_all <- c()
range_animal2_all <- c()
# Loop through positions, add standard error to vector
for (i in (1:100)) {
range_animal1_all <- c(range_animal1_all, range(R_animal1[i])[2])
range_animal2_all <- c(range_animal2_all, range(R_animal2[i])[2])
}
plot(range_animal1_all, col = "black", ylim = c(0, 3), pch = 20)
points(range_animal2_all, col = "red", pch = 20)
# Initalize vector
range_animal1 <- c()
range_animal2 <- c()
# Loop through positions, add standard error to vector
for (i in (1:100)) {
range_animal1 <- c(range_animal1, range(R_animal1_nomvmt[i])[2])
range_animal2 <- c(range_animal2, range(R_animal2_nomvmt[i])[2])
}
plot(range_animal1, col = "black", ylim = c(0, 3), pch = 20)
points(range_animal2, col = "red", pch = 20)
plot(R_animal1$Position.1)
nrow(R_animal1)
R_animal1[1]
R_animal1[1,1]
R_animal1[1,95]
y <- c()
for (pos in 1:100) {
y <- c(y, R_animal1[1, pos])
}
plot(y)
plot(y, type = "l")
plot(y, type = "l", ylim = c(0,1))
plot(y, type = "l")
y <- c()
for (pos in 1:100) {
y <- c(y, R_animal1[30, pos])
}
plot(y, type = "l")
y <- c()
for (pos in 1:100) {
y <- c(y, R_animal1[1, pos])
}
plot(y, type = "l")
for (animal in (2:nrow(R_animal1))) {
y <- c()
for (pos in 1:100) {
y <- c(y, R_animal1[animal, pos])
}
points(y, type = "l")
}
y <- c()
for (pos in 1:100) {
y <- c(y, R_animal1[1, pos], ylim = c(0.5, 5))
}
plot(y, type = "l")
for (animal in (2:nrow(R_animal1))) {
y <- c()
for (pos in 1:100) {
y <- c(y, R_animal1[animal, pos])
}
points(y, type = "l")
}
y <- c()
for (pos in 1:100) {
y <- c(y, R_animal1[1, pos], ylim = c(0.5, 5))
}
plot(y)
for (animal in (2:nrow(R_animal1))) {
y <- c()
for (pos in 1:100) {
y <- c(y, R_animal1[animal, pos])
}
points(y)
}
y <- c()
for (pos in 1:100) {
y <- c(y, R_animal1[1, pos], ylim = c(0.5, 5))
}
plot(y)
for (animal in (2:4)) {
y <- c()
for (pos in 1:100) {
y <- c(y, R_animal1[animal, pos])
}
points(y)
}
y <- c()
for (pos in 1:100) {
y <- c(y, R_animal1[1, pos], ylim = c(0.5, 5))
}
plot(y)
for (animal in (2:2)) {
y <- c()
for (pos in 1:100) {
y <- c(y, R_animal1[animal, pos])
}
points(y)
}
y <- c()
for (pos in 1:100) {
y <- c(y, R_animal1[1, pos], ylim = c(0.5, 5))
}
plot(y)
for (animal in (1)) {
y <- c()
for (pos in 1:100) {
y <- c(y, R_animal1[animal, pos])
}
points(y)
}
plot(y)
y <- c()
for (pos in 1:100) {
y <- c(y, R_animal1[animal, pos])
}
points(y)
y <- c()
for (pos in 1:100) {
y <- c(y, R_animal1[1, pos], ylim = c(0.5, 5))
}
plot(y)
for (animal in (1)) {
y <- c()
for (pos in 1:100) {
y <- c(y, R_animal1[animal, pos])
}
points(y)
}
y <- c()
for (pos in 1:100) {
y <- c(y, R_animal1[1, pos], ylim = c(0.5, 5))
}
plot(y)
plot(y)
y <- c()
for (pos in 1:100) {
y <- c(y, R_animal1[1, pos], ylim = c(0.5, 5))
}
for (pos in 1:100) {
y <- c(y, R_animal1[1, pos])
}
plot(y)
y <- c()
for (pos in 1:100) {
y <- c(y, R_animal1[1, pos])
}
plot(y)
y <- c()
for (pos in 1:100) {
y <- c(y, R_animal1[1, pos])
}
plot(y, ylim = c(0,5))
for (animal in (1:100) {
y <- c()
for (pos in 1:100) {
y <- c(y, R_animal1[animal, pos])
}
points(y)
}
```
y <- c()
for (pos in 1:100) {
y <- c(y, R_animal1[1, pos])
}
plot(y, ylim = c(0,5))
for (animal in (1:100)) {
y <- c()
for (pos in 1:100) {
y <- c(y, R_animal1[animal, pos])
}
points(y)
}
y <- c()
for (pos in 1:100) {
y <- c(y, R_animal1[1, pos])
}
plot(y, ylim = c(0,2))
for (animal in (1:100)) {
y <- c()
for (pos in 1:100) {
y <- c(y, R_animal1[animal, pos])
}
points(y)
}
y <- c()
for (pos in 1:100) {
y <- c(y, R_animal1[1, pos])
}
plot(y, ylim = c(0,2), type = "l")
for (animal in (1:100)) {
y <- c()
for (pos in 1:100) {
y <- c(y, R_animal1[animal, pos])
}
points(y, type = "l")
}
y <- c()
for (pos in 1:100) {
y <- c(y, R_animal1[1, pos])
}
plot(y, ylim = c(0.5,1.5), type = "l")
for (animal in (1:100)) {
y <- c()
for (pos in 1:100) {
y <- c(y, R_animal1[animal, pos])
}
points(y, type = "l")
}
